name: Tests

on: [ push, pull_request ]

jobs:
  tests:
    runs-on: ubuntu-latest

    name: Tests

    services:
      mysql:
        image: mysql:8.3
        ports:
          - 33306:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup
        uses: ./.github/action/setup
        with:
          php-version: 8.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Composer Dependencies
        run: composer install -q --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build Front-end Assets
        run: npm run build

      - name: Prepare Laravel Environment
        run: |
          php -r "file_exists('.env') || copy('.env.ci', '.env');"
          php artisan key:generate
          php artisan optimize

      - name: Run Database Migrations
        run: php artisan migrate

      - name: Link Storage
        run: php artisan storage:link

      - name: Run Tests
        run: ./vendor/bin/pest --ci --parallel

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Display Laravel Log
        if: failure()
        run: cat storage/logs/laravel.log

  type-coverage:
    runs-on: ubuntu-latest

    name: Type Coverage

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup
        uses: ./.github/action/setup
        with:
          php-version: 8.4

      - name: Install Composer Dependencies
        run: composer install -q --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare Laravel Environment
        run: |
          php -r "file_exists('.env') || copy('.env.ci', '.env');"
          php artisan key:generate
          php artisan optimize

      - name: Run Type Coverage
        run: ./vendor/bin/pest --type-coverage --min=99

      - name: Display Laravel Log
        if: failure()
        run: cat storage/logs/laravel.log
