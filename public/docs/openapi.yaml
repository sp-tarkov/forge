openapi: 3.0.3
info:
  title: 'The Forge API Documentation'
  description: 'The greatest resource available for Single Player Tarkov modifications. Where modding legends are made. Discover powerful tools, expert-written guides, and exclusive mods. Craft your vision. Transform the game.'
  version: 1.0.0
servers:
  -
    url: 'https://forge.sp-tarkov.com'
tags:
  -
    name: Authentication
    description: "\nEndpoints for user authentication and token management."
  -
    name: General
    description: "\nAPIs for general application status and information."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can generate your own API token by logging into The Forge, clicking your profile picture, and clicking <b>API Tokens</b>.'
security:
  -
    default: []
paths:
  /api/v0/auth/login:
    post:
      summary: 'User Login & Token Creation'
      operationId: userLoginTokenCreation
      description: "Authenticates a user with email and password and returns an API token. Users who registered via OAuth (and\nhaven't set a password) cannot use this endpoint."
      parameters: []
      responses:
        200:
          description: 'Successful Login'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    token: '{YOUR_API_TOKEN}'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: '{YOUR_API_TOKEN}'
        401:
          description: 'Invalid Credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  code: UNAUTHENTICATED
                  message: 'Invalid credentials provided.'
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: UNAUTHENTICATED
                  message:
                    type: string
                    example: 'Invalid credentials provided.'
        403:
          description: 'OAuth User Attempt'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  code: PASSWORD_LOGIN_UNAVAILABLE
                  message: 'Password login is not available for accounts created via OAuth. Please use the original login method or set a password for your account.'
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: PASSWORD_LOGIN_UNAVAILABLE
                  message:
                    type: string
                    example: 'Password login is not available for accounts created via OAuth. Please use the original login method or set a password for your account.'
        422:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  code: VALIDATION_FAILED
                  message: 'Validation failed.'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                    abilities.0:
                      - 'The selected ability read-invalid is invalid. Allowed abilities are: create, read, update, delete'
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: VALIDATION_FAILED
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
                      abilities.0:
                        type: array
                        example:
                          - 'The selected ability read-invalid is invalid. Allowed abilities are: create, read, update, delete'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address. Must be a valid email address. The <code>email</code> of an existing record in the users table."
                  example: test@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: secretPassword
                  nullable: false
                token_name:
                  type: string
                  description: 'A descriptive name for the API token. Must not be greater than 255 characters.'
                  example: my-data-script-token
                  nullable: false
                abilities:
                  type: array
                  description: ''
                  example:
                    - update
                  items:
                    type: string
                    enum:
                      - create
                      - read
                      - update
                      - delete
              required:
                - email
                - password
  /api/v0/ping:
    get:
      summary: 'Check API Health'
      operationId: checkAPIHealth
      description: "Returns a simple 'pong' message to indicate that the API endpoint\nis available and responding correctly. This endpoint is typically used\nfor health checks or basic connectivity tests.\n\nIt does not require authentication."
      parameters: []
      responses:
        200:
          description: 'Successful Ping'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    message: pong
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: pong
      tags:
        - General
      security: []
