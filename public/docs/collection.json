{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "https:\/\/forge.sp-tarkov.com"
        }
    ],
    "info": {
        "name": "The Forge API Documentation",
        "_postman_id": "8c7fa6ff-ad5c-49e6-afb1-8630e31f7bae",
        "description": "The greatest resource available for Single Player Tarkov modifications. Where modding legends are made. Discover powerful tools, expert-written guides, and exclusive mods. Craft your vision. Transform the game.",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "description": "\nEndpoints for user authentication and token management.",
            "item": [
                {
                    "name": "User Login & Token Creation",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/v0\/auth\/login",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/v0\/auth\/login"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\":\"test@example.com\",\"password\":\"secretPassword\",\"token_name\":\"my-data-script-token\",\"abilities\":[\"update\"]}"
                        },
                        "description": "Authenticates a user with email and password and returns an API token. Users who registered via OAuth (and\nhaven't set a password) cannot use this endpoint."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"success\": true,\n    \"data\": { \"token\": \"{YOUR_API_TOKEN}\" }\n}",
                            "name": "Successful Login"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\n    \"success\": false,\n    \"code\": \"UNAUTHENTICATED\",\n    \"message\": \"Invalid credentials provided.\"\n}",
                            "name": "Invalid Credentials"
                        },
                        {
                            "header": [],
                            "code": 403,
                            "body": "{\n    \"success\": false,\n    \"code\": \"PASSWORD_LOGIN_UNAVAILABLE\",\n    \"message\": \"Password login is not available for accounts created via OAuth. Please use the original login method or set a password for your account.\"\n}",
                            "name": "OAuth User Attempt"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n    \"success\": false,\n    \"code\": \"VALIDATION_FAILED\",\n    \"message\": \"Validation failed.\",\n    \"errors\": {\n        \"email\": [ \"The email field is required.\" ],\n        \"password\": [ \"The password field is required.\" ],\n        \"abilities.0\": [ \"The selected ability read-invalid is invalid. Allowed abilities are: create, read, update, delete\" ]\n    }\n}",
                            "name": "Validation Error"
                        }
                    ]
                }
            ]
        },
        {
            "name": "General",
            "description": "\nAPIs for general application status and information.",
            "item": [
                {
                    "name": "Check API Health",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/v0\/ping",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/v0\/ping"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Returns a simple 'pong' message to indicate that the API endpoint\nis available and responding correctly. This endpoint is typically used\nfor health checks or basic connectivity tests.\n\nIt does not require authentication.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"success\": true,\n    \"data\": { \"message\": \"pong\" }\n}",
                            "name": "Successful Ping"
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "Authorization",
                "type": "string"
            }
        ]
    }
}